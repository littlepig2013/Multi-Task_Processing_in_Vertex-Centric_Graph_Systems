GRAPHLAB_SUBNET_ID/GRAPHLAB_SUBNET_MASK environment variables not defined.
Using default values
Subnet ID: 0.0.0.0
Subnet Mask: 0.0.0.0
Will find first IPv4 non-loopback address matching the subnet
[1;32mINFO:     dc.cpp(distributed_control:127): Distributed Control Initialized from MPI
[0m[1;32mINFO:     dc.cpp(distributed_control:127): Distributed Control Initialized from MPI
[0m[1;32mINFO:     dc.cpp(init:576): TCP Communication layer constructed.
[0m[1;32mINFO:     dc.cpp(init:576): TCP Communication layer constructed.
[0m[1;32mINFO:     dc.cpp(init:578): Cluster of 2 instances created.
[0m[1;32mINFO:     dc.cpp(init:585): Address: 10.20.1.40
[0m[1;32mINFO:     dc.cpp(init:585): Address: 10.20.1.3
[0mLoading graph in format: adj[1;32mINFO:     distributed_graph.hpp(set_ingress_method:3214): Automatically determine ingress method: grid
[0m
[1;32mINFO:     distributed_graph.hpp(load_from_hdfs:2252): Loading graph from file: hdfs://galaxy040:54312/twitter_pregelplus/twitter_pregelplus.txt
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 2 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 3870 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 24742 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 40969 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 69206 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 122760 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 169663 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 232804 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 279224 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 305095 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 341149 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 383559 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 468066 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 573962 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 655256 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 724734 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 837516 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 942145 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 1075744 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 1196706 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 1394953 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 1581701 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 1762878 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 1891298 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 2066024 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 2277812 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 2449364 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 2666864 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 2826139 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 3052467 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 3273651 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 3488566 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 3627804 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 3744550 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 3955054 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 4230864 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 4512074 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 4752925 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 4994557 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 5364555 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 5640438 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 5977848 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 6318043 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 6620221 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 6974066 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 7501688 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 8076208 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 8646077 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 9264898 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 9823260 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 10582380 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 11195617 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 11965445 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 12774181 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 13624647 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 14524520 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 15532493 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 16573145 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 17591561 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 18436459 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 19444564 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 20463472 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 21513214 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 22639763 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 23803217 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 24947949 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 26117667 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 27286960 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 28076210 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 28375981 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 28987156 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 29442796 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 30126099 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 30986658 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 31700108 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 32423236 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 33139564 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 33851392 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 34572060 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 35096324 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 35837797 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 36424836 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 36811703 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 37369741 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 38122778 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 38640695 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 39419421 Lines read
[0mINFO:     distributed_graph.hpp(load_from_stream:3250): 40054898 Lines read
[0mINFO:     distributed_graph.hpp(finalize:711): Distributed graph: enter finalize
[0mINFO:     distributed_graph.hpp(finalize:711): Distributed graph: enter finalize
[0m[1;32mINFO:     distributed_ingress_base.hpp(finalize:199): Finalizing Graph...
[0mINFO:     distributed_ingress_base.hpp(finalize:259): Graph Finalize: constructing local graph
[0m[1;35mWARNING:  memory_info.cpp(log_usage:96): Unable to print memory info for: Post Flush. No memory extensions api available.
[0mINFO:     distributed_ingress_base.hpp(finalize:259): Graph Finalize: constructing local graph
[0mINFO:     distributed_ingress_base.hpp(finalize:304): Graph Finalize: finalizing local graph.
[0mterminate called after throwing an instance of 'std::bad_alloc'
  what():  std::bad_alloc

===================================================================================
=   BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES
=   PID 24878 RUNNING AT galaxy040
=   EXIT CODE: 134
=   CLEANING UP REMAINING PROCESSES
=   YOU CAN IGNORE THE BELOW CLEANUP MESSAGES
===================================================================================
[proxy:0:1@galaxy003] HYD_pmcd_pmip_control_cmd_cb (pm/pmiserv/pmip_cb.c:887): assert (!closed) failed
[proxy:0:1@galaxy003] HYDT_dmxu_poll_wait_for_event (tools/demux/demux_poll.c:76): callback returned error status
[proxy:0:1@galaxy003] main (pm/pmiserv/pmip.c:202): demux engine error waiting for event
[mpiexec@galaxy040] HYDT_bscu_wait_for_completion (tools/bootstrap/utils/bscu_wait.c:76): one of the processes terminated badly; aborting
[mpiexec@galaxy040] HYDT_bsci_wait_for_completion (tools/bootstrap/src/bsci_wait.c:23): launcher returned error waiting for completion
[mpiexec@galaxy040] HYD_pmci_wait_for_completion (pm/pmiserv/pmiserv_pmci.c:218): launcher returned error waiting for completion
[mpiexec@galaxy040] main (ui/mpich/mpiexec.c:340): process manager error waiting for completion
